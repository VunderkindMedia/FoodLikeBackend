const express = require('express');
const {sendPushOrders} = require('../api/sendPushApi');
const {config} = require('../helpers/insruments');
const {
  categoriesCreate,
  categoriesChange,
  categoryDelete,
  productDelete,
  productChange,
  productCreate,
  pushOrderSend,
  orderCreate,
  deleteOrder,
  changeOrder,
  changeOrderByTransaction
} = require('../controllers');
const hooksRouter = express.Router();


hooksRouter.post('/', ((req, res, next) => {
  const body = req.body;
  const hook_action = body.action;
  console.log(body);
  if (body.object === 'incoming_order') {
    if (hook_action === 'added') {
      orderCreate(req, res, next, 'open').then();
    } else if (hook_action === 'changed') {
      changeOrder(req, res, next, 'accept').then((order) => {
        if (order.status === 1) {
          sendPushOrders(`–ó–∞–∫–∞–∑ ‚Ññ${order.incoming_order_id} –ø—Ä–∏–Ω—è—Ç!`, '–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∫ —Å–±–æ—Ä–∫–µ', order, 'push_accept', pushOrderSend)
        } else if (order.status === 7) {
          sendPushOrders(`–ó–∞–∫–∞–∑ ‚Ññ${order.incoming_order_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω!`, '–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω.', order, 'push_canceled', pushOrderSend)
        }
      });
    } else if (hook_action === 'closed') {
      changeOrder(req, res, next, 'end').then((order) => sendPushOrders('–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É', `–ó–∞–∫–∞–∑ ‚Ññ${order.incoming_order_id} –∑–∞–≤–µ—Ä—à–µ–Ω!`, order,  'push_end', pushOrderSend));
    } else if (hook_action === 'removed') {
      deleteOrder(req, res, next).then()
    } else {
      res.send({
        data: {
          msg: `–≠–∫—à–Ω "${hook_action}" –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`
        }
      })
    }
  } else if (body.object === 'transaction') {
    const history = JSON.parse(body.data).transactions_history;
    if (hook_action === 'added') {
      //–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω
      res.send({
        data: {
          msg: 'Success'
        }
      })
    } else if (hook_action === 'changed') {
     if (history.value === 30) {
       //–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω
       changeOrderByTransaction(req, res, next, 'ready').then((order) => sendPushOrders(`–ó–∞–∫–∞–∑ ‚Ññ${order.incoming_order_id} —Å–æ–±—Ä–∞–Ω üì¶ –∏ –æ–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏`, '–ú—ã —Å–æ–æ–±—â–∏–º, –∫–æ–≥–¥–∞ –∫—É—Ä—å–µ—Ä –ø–æ–µ–¥–µ—Ç üõµ –∫ –í–∞–º', order,  'push_ready', pushOrderSend));
      } else if (history.value === 40) {
        //–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫—É—Ä—å–µ—Ä–æ–º
       console.log('–ö—É—Ä—å–µ—Ä');
       changeOrderByTransaction(req, res, next, 'delivery_start').then((order) => sendPushOrders(`–ó–∞–∫–∞–∑ ‚Ññ${order.incoming_order_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω`, '–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –∫—É—Ä—å–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ', order,  'push_delivery', pushOrderSend));
      } else if (history.value === 50) {
        //–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω
       changeOrderByTransaction(req, res, next, 'delivery_end').then(() => console.log('–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω'))
      } else {
       res.send({
         data: {
           msg: 'Success'
         }
       })
     }
    } else {
      res.send({
        data: {
          msg: 'Success'
        }
      })
    }
  } else if (body.object === 'product') {
    if (hook_action === 'added') {
      productCreate(req, res, next).then()
    } else if (hook_action === 'changed') {
      productChange(req, res, next).then()
    } else if (hook_action === 'removed') {
      productDelete(req, res, next).then()
    }
  } else if (body.object === 'category') {
    if (hook_action === 'added') {
      categoriesCreate(req, res, next).then()
    } else if (hook_action === 'changed') {
      categoriesChange(req, res, next).then()
    } else if (hook_action === 'removed') {
      categoryDelete(req, res, next).then()
    }
  } else {
    res.send({
      data: {
        msg: '–í—ã–∑–≤–∞–Ω —Ö—É–∫, –Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—â–µ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω'
      }
    })
  }
}));

module.exports = hooksRouter;
